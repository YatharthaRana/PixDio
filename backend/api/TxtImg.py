# -*- coding: utf-8 -*-
"""Generating AI Photos - Leap AI Realistic Vision

Automatically generated by Colaboratory.

"""

import requests
import json
import time

# get api key from Leap AI https://www.tryleap.ai
API_KEY = "1285ced6-b10b-410f-aa1a-a3d1eeed0e6d"

HEADERS = {
    "accept": "application/json",
    "content-type": "application/json",
    "authorization": f"Bearer {API_KEY}"
}

def generate_image(model_id, prompt):
    url = f"https://api.tryleap.ai/api/v1/images/models/{model_id}/inferences"

    payload = {
        "prompt": prompt,
        "steps": 50,
        "width": 512,
        "height": 512,
        "numberOfImages": 1,
        "promptStrength": 7,
        "enhancePrompt": False,
        "restoreFaces": True,
        "upscaleBy": "x1"
    }

    response = requests.post(url, json=payload, headers=HEADERS)
    data = json.loads(response.text)

    # print(data)
    inference_id = data["id"]
    status = data["status"]

    print(f"Inference ID: {inference_id}. Status: {status}")

    return inference_id, status


def get_inference_job(model_id, inference_id):
    url = f"https://api.tryleap.ai/api/v1/images/models/{model_id}/inferences/{inference_id}"

    response = requests.get(url, headers=HEADERS)
    data = json.loads(response.text)

    inference_id = data["id"]
    state = data["state"]
    images = None

    if len(data["images"]):
        images = data["images"]

    print(f"Inference ID: {inference_id}. State: {state}")

    return inference_id, state, images

# modelID refers to Realistic Vision model
def textinput(desc):
    model_id = "eab32df0-de26-4b83-a908-a83f3015e971"
    print("inside", desc)
    inference_id, status = generate_image(
        model_id, 
        prompt=desc
    )
    while status != "finished":
        time.sleep(10)
        inference_id, status, images = get_inference_job(model_id, inference_id)
    
    for image in images:
        return(image["uri"])
        # print(image["uri"])

